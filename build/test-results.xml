<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="3" time="0.077" timestamp="2024-07-29T12:51:21.471509+10:00" hostname="MSI"><testcase classname="test_unit" name="test_calculate_monthly_payment" time="0.001"><failure message="assert 0.12127514871832545 &lt; 0.01&#10; +  where 0.12127514871832545 = abs((90.95872485128167 - 91.08))&#10; +    where 90.95872485128167 = calculate_monthly_payment(5000, 3.5, 5)">def test_calculate_monthly_payment():
        assert abs(calculate_monthly_payment(1000, 5, 1) - 85.61) &lt; 0.01
&gt;       assert abs(calculate_monthly_payment(5000, 3.5, 5) - 91.08) &lt; 0.01
E       assert 0.12127514871832545 &lt; 0.01
E        +  where 0.12127514871832545 = abs((90.95872485128167 - 91.08))
E        +    where 90.95872485128167 = calculate_monthly_payment(5000, 3.5, 5)

test_unit.py:6: AssertionError</failure></testcase><testcase classname="test_unit" name="test_calculate_monthly_payment_zero_interest" time="0.001"><failure message="ZeroDivisionError: float division by zero">def test_calculate_monthly_payment_zero_interest():
&gt;       assert abs(calculate_monthly_payment(1000, 0, 1) - 83.33) &lt; 0.01

test_unit.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

principal = 1000, annual_interest_rate = 0, years = 1

    def calculate_monthly_payment(principal, annual_interest_rate, years):
        monthly_interest_rate = annual_interest_rate / 100 / 12
        number_of_payments = years * 12
&gt;       monthly_payment = principal * (monthly_interest_rate * (1 + monthly_interest_rate) ** number_of_payments) / ((1 + monthly_interest_rate) ** number_of_payments - 1)
E       ZeroDivisionError: float division by zero

loan_calculator.py:4: ZeroDivisionError</failure></testcase><testcase classname="test_unit" name="test_calculate_monthly_payment_short_term" time="0.001"><failure message="assert 1.7443559720115616 &lt; 0.01&#10; +  where 1.7443559720115616 = abs((169.10564402798843 - 170.85))&#10; +    where 169.10564402798843 = calculate_monthly_payment(1000, 5, 0.5)">def test_calculate_monthly_payment_short_term():
&gt;       assert abs(calculate_monthly_payment(1000, 5, 0.5) - 170.85) &lt; 0.01
E       assert 1.7443559720115616 &lt; 0.01
E        +  where 1.7443559720115616 = abs((169.10564402798843 - 170.85))
E        +    where 169.10564402798843 = calculate_monthly_payment(1000, 5, 0.5)

test_unit.py:14: AssertionError</failure></testcase></testsuite></testsuites>